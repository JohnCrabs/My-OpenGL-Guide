#include <GL/gl.h>
#include <GL/glut.h>

#define MY_WIN_WIDTH 450
#define MY_WIN_HEIGHT 250
#define MY_WIN_POS_X 100
#define MY_WIN_POS_Y 100
#define MY_WIN_TITLE "Polygons"

/*
 * Pattern Logic
 *
 * Hex  Binary
 *  0    0000
 *  1    0001
 *  2    0010
 *  3    0011
 *  4    0100
 *  5    0101
 *  6    0110
 *  7    0111
 *  8    1000
 *  9    1001
 *  A    1010
 *  B    1011
 *  C    1100
 *  D    1101
 *  E    1110
 *  F    1111
 *
 */

void display(void) {

    GLubyte mypattern[] = {
        0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00,
        0x0F, 0xFF, 0x03, 0xFF,  0x0F, 0xFF, 0x03, 0xFF,
        0x0C, 0x03, 0x03, 0x07,  0x0C, 0x03, 0x03, 0x07,
        0x0C, 0x03, 0x03, 0x03,  0x0C, 0x03, 0x03, 0x03,
        0x0F, 0X03, 0x03, 0x01,  0x0F, 0x03, 0x03, 0x01,
        0x00, 0x03, 0x03, 0x00,  0x00, 0x03, 0x03, 0x00,
        0x00, 0x03, 0x03, 0x00,  0x00, 0x03, 0x03, 0x00,
        0x00, 0x03, 0x03, 0x00,  0x00, 0x03, 0x03, 0x00,

        0x00, 0x03, 0x03, 0x00,  0x00, 0x03, 0x03, 0x00,
        0x00, 0x03, 0x03, 0x00,  0x00, 0x03, 0x03, 0x00,
        0x00, 0x03, 0x03, 0x00,  0x00, 0x03, 0x03, 0x00,
        0x00, 0x03, 0x03, 0x01,  0x00, 0x03, 0x03, 0x01,
        0x00, 0x03, 0x03, 0x03,  0x00, 0x03, 0x03, 0x03,
        0x00, 0x03, 0x03, 0x07,  0x00, 0x03, 0x03, 0x07,
        0x0F, 0xFF, 0xC3, 0x0F,  0x0F, 0xFF, 0xC3, 0xFF,
        0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00
    };

    GLubyte fly[] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x03, 0x80, 0x01, 0xC0, 0x06, 0xC0, 0x03, 0x60,
        0x04, 0x60, 0x06, 0x20, 0x04, 0x30, 0x0C, 0x20,
        0x04, 0x18, 0x00, 0x20, 0x04, 0x0C, 0x30, 0x20,
        0x04, 0x06, 0x60, 0x20, 0x44, 0x03, 0xC0, 0x22,
        0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
        0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,
        0x44, 0x01, 0x80, 0x22, 0x44, 0x01, 0x80, 0x22,

        0x66, 0x01, 0x80, 0x66, 0x33, 0x01, 0x80, 0xCC,
        0x19, 0x81, 0x81, 0x98, 0x0C, 0xC1, 0x83, 0x30,
        0x07, 0xe1, 0x87, 0xe0, 0x03, 0x3f, 0xfc, 0xc0,
        0x03, 0x31, 0x8c, 0xc0, 0x03, 0x33, 0xcc, 0xc0,
        0x06, 0x64, 0x26, 0x60, 0x0c, 0xcc, 0x33, 0x30,
        0x18, 0xcc, 0x33, 0x18, 0x10, 0xc4, 0x23, 0x08,
        0x10, 0x63, 0xC6, 0x08, 0x10, 0x30, 0x0c, 0x08,
        0x10, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00, 0x08
    };

    GLubyte halftone[] = {
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55,
        0xAA, 0xAA, 0xAA, 0xAA, 0x55, 0x55, 0x55, 0x55
    };

    glClear(GL_COLOR_BUFFER_BIT);
    /* draw one solid, unstippled rectangle */
    /* then two stippled rectangles */
    glColor3f(1.0, 1.0, 1.0); //white rectangle polygon
    glRectf(25.0, 32.0, 125.0, 125.0);

    glEnable(GL_POLYGON_STIPPLE);//ENABLE STIPPLE

    glColor3f(1.0, 0.0, 0.0); //red fly
    glPolygonStipple(fly);
    glRectf(125.0, 32.0, 225.0, 125.0);


    glColor3f(0.0, 1.0, 1.0); //cyan halftone
    glPolygonStipple(halftone);
    glRectf(225.0, 32.0, 325.0, 125.0);

    glDisable(GL_POLYGON_STIPPLE);//DISABLE STIPPLE

    /*
     * Draw a Gray rectangle and
     * above it mypatterns.
     * To do this GL_STIPPLE must be disabled
     * and be enabled again.
     */
    glColor3f(0.2, 0.2, 0.2); //gray
    glRectf(125.0, 130.0, 225.0, 225.0);
    glEnable(GL_POLYGON_STIPPLE);//ENABLE STIPPLE
    glColor3f(0.8, 0.5, 0.0); //orange mypattern
    glPolygonStipple(mypattern);
    glRectf(125.0, 130.0, 225.0, 225.0);
    glDisable(GL_POLYGON_STIPPLE);//DISABLE STIPPLE

    glFlush();
}

void init() {
    glClearColor(0.0, 0.0, 0.0, 0.0);
    glShadeModel(GL_FLAT);
}

void reshape(int w, int h) {
    glViewport(0, 0, (GLsizei) w, (GLsizei) h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0.0, 350.0, 0.0, 250.0, -1.0, 1.0);
}

void initializeGL(void) {
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(MY_WIN_WIDTH, MY_WIN_HEIGHT);
    glutInitWindowPosition(MY_WIN_POS_X, MY_WIN_POS_Y);
    glutCreateWindow(MY_WIN_TITLE);
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    initializeGL();
    init();
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutMainLoop();

    return 0;
}
